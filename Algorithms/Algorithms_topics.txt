

Refer to G-Drive for recorded sessions:


SECTION - I
-----------


[COMPLETED]
What is greedy method?
Coin Change problem
Knapsack problem
Job sequencing with Deadlines problem
Dijkstra's algorithm to find the shortest distance from given source to destination
Prim's algorithm to find the minimum spanning tree
Kruskal's algorithm to find the minimum spanning tree
Huffman coding for data compression & encryption

[COMPLETED]
With the help of some c code examples please:
Big O 
Time complexity
Space complexity
Big 0, Big theta & big omega, little o notation
Best case, worstcase & expected case
Drop the constants
Drop the Non-Dominant Terms
Multi-Part Algorithms: Add vs Multiply
Amortized time
Log N Runtimes
Recursive Runtimes
Non-Recursive rumtimes


C code snippets functions logics explaination for - 
AVL Trees, red black trees,  DFS, BFS

Divide & Conquer
General Method
Binary Search
Maximum & Minimum (Divide and Conquer Method)
	Time complexity By Considering Element Comparison
	Time complexity By Considering all Comparisons
Sorting Using Divide & Conquer
	Merge Sorting
	Quick Sorting (Partition Exchange Sort)

Transform & Conquer
Heaps & Heap Sort
Create a Heap (Bottom-Up Heap Construction)
Heap Sort Using Bottom up Approach
Tracing of Heap Sort
Analysis of Heap Sort using Bottom up Approach


Dynamic Programming - check the topics to be covered in CTCI


Strassen's Matrix Multiplication.
Recursion
Dynamic programming & memoization
Multistage Graphs
	Forward approach
	Backward approach
Warshal's Algorithm (Transitive Closure) - [COMPLETED]
Floyd's Algorithm (For all Pairs Shortest Paths Problem) 
Optimal Binary search trees
The 0/1 Knapsack Problem - [COMPLETED]
Knapsack Problem using memory functions - [COMPLETED]
Bellman-Ford AlgorithmTraveling Salesman Problem(TSP) - [COMPLETED]
	TSP using brute Force - [COMPLETED]
	TSP using Dynamic Programming - [COMPLETED]
	
Limitations of Algorithm Power
Introduction
Lower Bound Arguments
Decision TreesP, NP & NP-Complete Problems
Challenges of Numerical Algorithms

Coping with the Limitations of Algorithm Power
Backtracking
	Implementation of Back tracking problems
	N-Queens Problem
	Sum of Subset Problem
	Hamiltonian Circuit Problem
Branch & Bound
	Knapsack Problem
	Assignment Problem
	Travelling Salesperson Porblem
Approximation Algorithms for NP-Hard Problems
	Approximation Algorithms for Travelling Salesman Problem(TSP)
	Approximation Algorithm for Knapsack Problem
	
Decrease & Conquer
Topological Sorting
	Topological Sort Using DFS Method.
	Toplogical Sort Using Source Removal Method.

---------------------------------

SECTION - II
------------
	
Others:

Hashing

14.1 What is Hashing?
14.2 Why Hashing?
14.3 HashTable ADT
14.4 Understanding Hashing
14.5 Components of Hashing
14.6 Hash Table
14.7 Hash Function
14.8 Load Factor
14.9 Collisions
14.10 Collision Resolution Techniques
14.11 Separate Chaining
14.12 Open Addressing
14.13 Comparison of Collision Resolution Techniques
14.14 How Hashing Gets O(1) Complexity?
14.15 Hashing Techniques
14.16 Problems for which Hash Tables are not suitable
14.17 Bloom Filters
14.18 Hashing: Problems & Solutions


15. String Algorithms

15.1 Introduction
15.2 String Matching Algorithms
15.3 Brute Force Method
15.4 Rabin-Karp String Matching Algorithm
15.5 String Matching with Finite Automata
15.6 KMP Algorithm
15.7 Boyer-Moore Algorithm
15.8 Data Structures for Storing Strings
15.9 Hash Tables for Strings
15.10 Binary Search Trees for Strings
15.11 Tries
15.12 Ternary Search Trees
15.13 Comparing BSTs, Tries and TSTs
15.14 Suffix Trees
15.15 String Algorithms: Problems & Solutions

Priority Queues and Heaps

7.1 What is a Priority Queue?
7.2 Priority Queue ADT
7.3 Priority Queue Applications
7.4 Priority Queue Implementations
7.5 Heaps and Binary Heaps
7.6 Binary Heaps
7.7 Heapsort
7.8 Priority Queues [Heaps]: Problems & Solutions


Disjoint Sets ADT

8.1 Introduction
8.2 Equivalence Relations and Equivalence Classes
8.3 Disjoint Sets ADT
8.4 Applications
8.5 Tradeoffs in Implementing Disjoint Sets ADT
8.8 Fast UNION Implementation (Slow FIND)
8.9 Fast UNION Implementations (Quick FIND)
8.10 Summary
8.11 Disjoint Sets: Problems & Solutions

---------------------------------

SECTION - III
-------------

https://www.geeksforgeeks.org/must-do-coding-questions-for-companies-like-amazon-microsoft-adobe/


Greedy Algorithms

Activity Selection
N meetings in one room
Coin Piles
Maximize Toys
Page Faults in LRU
Largest number possible
Minimize the heights
Minimize the sum of product
Huffman Decoding
Minimum Spanning Tree
Shop in Candy Store
Geek collects the balls

Dynamic Programming
	
Minimum Operations
Max length chain
Minimum number of Coins
Longest Common Substring
Longest Increasing Subsequence
Longest Common Subsequence
0 â€“ 1 Knapsack Problem
Maximum sum increasing subsequence
Minimum number of jumps
Edit Distance
Coin Change Problem
Subset Sum Problem
Box Stacking
Rod Cutting
Path in Matrix
Minimum sum partition
Count number of ways to cover a distance
Egg Dropping Puzzle
Optimal Strategy for a Game
Shortest Common Supersequence
	
	
Divide and Conquer

Find the element that appears once in sorted array
Search in a Rotated Array
Binary Search
Sum of Middle Elements of two sorted arrays
Quick Sort
Merge Sort
K-th element of two sorted Arrays


Backtracking

N-Queen Problem
Solve the Sudoku
Rat in a Maze Problem
Word Boggle
Generate IP Addresses

SECTION - IV
-------------
Solutions to the Algorithms_DesignKleinberg's book.

SECTION -V
----------
Important:

Datastructure https://www.tutorialspoint.com/data_structures_algorithms/linked_list_program_in_c.htm
Algo https://www.programiz.com/dsa/stack

Travelling Salesman Problem Greedy Algo
Prim's Minimal Spanning Tree Algorithm
Kruskal's Minimal Spanning Tree Algorithm
Dijkstra's Minimal Spanning Tree Algorithm
Graph - Map Coloring
Graph - Vertex Cover
Knapsack Problem
Job Scheduling Problem
Fibonacci number series Dynamic Programming
Knapsack problem
Tower of Hanoi
All pair shortest path by Floyd-Warshall
Shortest path by Dijkstra
Project scheduling
Merge Sort Divide and Conquer
Quick Sort
Binary Search
Strassen's Matrix Multiplication
Closest pair (points)


https://www.tryexponent.com/courses/software-engineering
https://www.tryexponent.com/questions?src=nav
https://www.youtube.com/results?search_query=system+design
https://www.youtube.com/channel/UC9vLsnF6QPYuH51njmIooCQ
